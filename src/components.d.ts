/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface WoColorChoose {
    'activeColor': string | null;
    'colorArr': Array<any>;
    'label': string;
    'labelColor': string;
    'labelSize': number;
    'setColor': (item: any) => void;
    'size': string | null;
  }
  interface WoColorChooseAttributes extends StencilHTMLAttributes {
    'activeColor'?: string | null;
    'colorArr'?: Array<any>;
    'label'?: string;
    'labelColor'?: string;
    'labelSize'?: number;
    'onGetColor'?: (event: CustomEvent) => void;
    'size'?: string | null;
  }

  interface WoMode {
    /**
    * 选中时的背景颜色
    */
    'activeBackground': string | null;
    /**
    * 选中时的文字颜色
    */
    'activeColor': string | null;
    /**
    * 未选中时的背景颜色
    */
    'background': string | null;
    /**
    * 未选中时的文字颜色
    */
    'color': string | null;
    'label': string;
    /**
    * 说明文字颜色
    */
    'labelColor': string;
    /**
    * 说明文字大小
    */
    'labelSize': number;
    /**
    * 模式数组
    */
    'modeArr': Array<Mode>;
    /**
    * 设置当前的模式
    */
    'setMode': (item: any) => void;
  }
  interface WoModeAttributes extends StencilHTMLAttributes {
    /**
    * 选中时的背景颜色
    */
    'activeBackground'?: string | null;
    /**
    * 选中时的文字颜色
    */
    'activeColor'?: string | null;
    /**
    * 未选中时的背景颜色
    */
    'background'?: string | null;
    /**
    * 未选中时的文字颜色
    */
    'color'?: string | null;
    'label'?: string;
    /**
    * 说明文字颜色
    */
    'labelColor'?: string;
    /**
    * 说明文字大小
    */
    'labelSize'?: number;
    /**
    * 模式数组
    */
    'modeArr'?: Array<Mode>;
    /**
    * 对外提供当前模式数据
    */
    'onGetMode'?: (event: CustomEvent) => void;
  }

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface WoProgress {
    'calculateValue': (left: any) => void;
    'clickMode': (e: any) => void;
    'getCirclePos': (e: any) => void;
    'label': string;
    'labelColor': string;
    'labelSize': number;
    'max': number;
    'min': number;
    'percent': boolean;
    'touchEventEnd': () => void;
    'value': number;
  }
  interface WoProgressAttributes extends StencilHTMLAttributes {
    'label'?: string;
    'labelColor'?: string;
    'labelSize'?: number;
    'max'?: number;
    'min'?: number;
    'onGetValue'?: (event: CustomEvent) => void;
    'percent'?: boolean;
    'value'?: number;
  }

  interface WoMain {
    /**
    * 更改设备开关状态
    */
    'changeState': () => void;
    /**
    * 设备图片路径
    */
    'imageUrl': string;
    /**
    * 设备开关状态
    */
    'isOpen': boolean;
    /**
    * 设备所属房间
    */
    'location': string;
  }
  interface WoMainAttributes extends StencilHTMLAttributes {
    /**
    * 设备图片路径
    */
    'imageUrl'?: string;
    /**
    * 设备开关状态
    */
    'isOpen'?: boolean;
    /**
    * 设备所属房间
    */
    'location'?: string;
    /**
    * 获取设备开关状态
    */
    'onGetOpen'?: (event: CustomEvent) => void;
  }
}

declare global {
  interface StencilElementInterfaces {
    'WoColorChoose': Components.WoColorChoose;
    'WoMode': Components.WoMode;
    'MyComponent': Components.MyComponent;
    'WoProgress': Components.WoProgress;
    'WoMain': Components.WoMain;
  }

  interface StencilIntrinsicElements {
    'wo-color-choose': Components.WoColorChooseAttributes;
    'wo-mode': Components.WoModeAttributes;
    'my-component': Components.MyComponentAttributes;
    'wo-progress': Components.WoProgressAttributes;
    'wo-main': Components.WoMainAttributes;
  }


  interface HTMLWoColorChooseElement extends Components.WoColorChoose, HTMLStencilElement {}
  var HTMLWoColorChooseElement: {
    prototype: HTMLWoColorChooseElement;
    new (): HTMLWoColorChooseElement;
  };

  interface HTMLWoModeElement extends Components.WoMode, HTMLStencilElement {}
  var HTMLWoModeElement: {
    prototype: HTMLWoModeElement;
    new (): HTMLWoModeElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLWoProgressElement extends Components.WoProgress, HTMLStencilElement {}
  var HTMLWoProgressElement: {
    prototype: HTMLWoProgressElement;
    new (): HTMLWoProgressElement;
  };

  interface HTMLWoMainElement extends Components.WoMain, HTMLStencilElement {}
  var HTMLWoMainElement: {
    prototype: HTMLWoMainElement;
    new (): HTMLWoMainElement;
  };

  interface HTMLElementTagNameMap {
    'wo-color-choose': HTMLWoColorChooseElement
    'wo-mode': HTMLWoModeElement
    'my-component': HTMLMyComponentElement
    'wo-progress': HTMLWoProgressElement
    'wo-main': HTMLWoMainElement
  }

  interface ElementTagNameMap {
    'wo-color-choose': HTMLWoColorChooseElement;
    'wo-mode': HTMLWoModeElement;
    'my-component': HTMLMyComponentElement;
    'wo-progress': HTMLWoProgressElement;
    'wo-main': HTMLWoMainElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
